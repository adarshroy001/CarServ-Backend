name: Manual Deployment

on:
  workflow_dispatch: # Allows manual trigger
    inputs:
      environment:
        description: 'Environment to deploy (prod/uat/dev)'
        required: true
      branch:
        description: 'Branch to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. Install Dependencies
      - name: Install Dependencies
        run: npm install

      # 4. Build Application
      # Transpile the API folder into a "dist" directory, leaving server.js untouched
      - name: Build Application
        run: |
          npm run build # This assumes the `build` script is set up in your package.json
          ls -l dist     # Confirm that the dist folder is created

      # 5. Package Application for Deployment
      # Include server.js, dist, node_modules, and any other necessary files
      - name: Package Application
        run: |
          zip -r app-deployment.zip \
          server.js dist node_modules package.json package-lock.json

      # 6. Set Environment Variables for Deployment
      - name: Set Environment Variables
        run: |
          ENVIRONMENT=$(echo "${{ github.event.inputs.environment }}" | tr '[:lower:]' '[:upper:]')
          echo "APP_NAME_SECRET=AZURE_APP_NAME_${ENVIRONMENT}_BACKEND" >> $GITHUB_ENV
          echo "PUBLISH_PROFILE_SECRET=AZURE_WEBAPP_${ENVIRONMENT}_BACKEND_PUBLISH_PROFILE" >> $GITHUB_ENV

      # 7. Deploy to Azure App Service
      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets[env.APP_NAME_SECRET] }}
          publish-profile: ${{ secrets[env.PUBLISH_PROFILE_SECRET] }}
          package: ./app-deployment.zip



